(function() {var implementors = {};
implementors["sc_light"] = [{"text":"impl&lt;Block, B, Local&gt; <a class=\"trait\" href=\"sc_client_api/call_executor/trait.CallExecutor.html\" title=\"trait sc_client_api::call_executor::CallExecutor\">CallExecutor</a>&lt;Block&gt; for <a class=\"struct\" href=\"sc_light/call_executor/struct.GenesisCallExecutor.html\" title=\"struct sc_light::call_executor::GenesisCallExecutor\">GenesisCallExecutor</a>&lt;B, Local&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Block: <a class=\"trait\" href=\"sp_runtime/traits/trait.Block.html\" title=\"trait sp_runtime::traits::Block\">BlockT</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"sc_client_api/backend/trait.RemoteBackend.html\" title=\"trait sc_client_api::backend::RemoteBackend\">RemoteBackend</a>&lt;Block&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Local: <a class=\"trait\" href=\"sc_client_api/call_executor/trait.CallExecutor.html\" title=\"trait sc_client_api::call_executor::CallExecutor\">CallExecutor</a>&lt;Block&gt;,&nbsp;</span>","synthetic":false,"types":["sc_light::call_executor::GenesisCallExecutor"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()